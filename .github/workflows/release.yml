name: Test and Release

on:
  push:
    tags:
      - '*'
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        arch: [amd64, arm64]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-musl, aarch64-unknown-linux-gnu
          components: clippy
      - name: Set Build Tools and update Rust
        run: |
          rustup update stable

      - name: Build on Linux amd64
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.arch == 'amd64' }}
        run: |
          sudo apt update && sudo apt install -y musl-tools

          cargo install cargo-deb
          cargo install cargo-generate-rpm
          cargo test --all-features
          cargo clippy --all-features --all-targets -- --deny warnings
          cargo fmt --all -- --check

          cargo build --release --target=x86_64-unknown-linux-musl

          cp ./target/x86_64-unknown-linux-musl/release/mailpeter .
          tar -czvf "mailpeter-${{github.ref_name}}_x86_64-unknown-linux-musl.tar.gz" assets LICENSE README.md mailpeter
          rm -f mailpeter
          cargo deb --target=x86_64-unknown-linux-musl -o mailpeter_${{github.ref_name}}-1_amd64.deb
          cargo generate-rpm --target=x86_64-unknown-linux-musl -o mailpeter-${{github.ref_name}}-1.x86_64.rpm

      - name: Build on Linux arm64
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64' }}
        run: |
          sudo apt update && sudo apt install -y binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

          export CMAKE_SYSTEM_NAME=Linux
          export TARGET=aarch64-linux-gnu
          export TARGET_AR=aarch64-linux-gnu-ar
          export TARGET_CC=aarch64-linux-gnu-gcc
          export TARGET_CXX=aarch64-linux-gnu-g++
          export TARGET_RANLIB=aarch64-linux-gnu-ranlib
          export TARGET_CPP=aarch64-linux-gnu-cpp
          export TARGET_LD=aarch64-linux-gnu-ld
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=$TARGET_CC

          cargo install cargo-deb
          cargo install cargo-generate-rpm

          cargo build --release --target=aarch64-unknown-linux-gnu

          cp ./target/aarch64-unknown-linux-gnu/release/mailpeter .
          tar -czvf "mailpeter-${{github.ref_name}}_aarch64-unknown-linux-gnu.tar.gz" assets LICENSE README.md mailpeter
          rm -f mailpeter
          cargo deb --target=aarch64-unknown-linux-gnu -o mailpeter_${{github.ref_name}}-1_arm64.deb
          cargo generate-rpm --target=aarch64-unknown-linux-gnu -o mailpeter-${{github.ref_name}}-1.x86_64.rpm

