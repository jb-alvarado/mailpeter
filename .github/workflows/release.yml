name: Test and Release

on:
  push:
    tags:
      - '*'
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-musl, aarch64-unknown-linux-musl
          components: clippy
      - name: Set Build Tools and update Rust
        run: |
          rustup update stable

      - name: Build on Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update && sudo apt install -y musl-tools musl-dev
          mkdir release

          cargo install cargo-deb
          cargo install cargo-generate-rpm
          cargo test --all-features
          cargo clippy --all-features --all-targets -- --deny warnings
          cargo fmt --all -- --check

          cargo build --release --target=x86_64-unknown-linux-musl

          cp ./target/x86_64-unknown-linux-musl/release/mailpeter .
          tar -czvf "release/mailpeter-${{github.ref_name}}_x86_64-unknown-linux-musl.tar.gz" assets LICENSE README.md mailpeter
          rm -f mailpeter
          cargo deb --target=x86_64-unknown-linux-musl -o release/mailpeter_${{github.ref_name}}-1_amd64.deb
          cargo generate-rpm --target=x86_64-unknown-linux-musl -o release/mailpeter-${{github.ref_name}}-1.x86_64.rpm

      - name: Build on MacOS
        if: ${{ matrix.os == 'macOS-latest' }}
        run: |
          mkdir release

          cargo build --release
          cp ./target/release/mailpeter .
          zip -r "release/mailpeter-${{github.ref_name}}_MacOS-x86_64.zip" assets/mailpeter.toml LICENSE README.md mailpeter

      - name: Build on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          New-Item -Path 'release' -ItemType Directory

          cargo build --release
          Compress-Archive -Path assets/mailpeter.toml, LICENSE, README.md, target/release/mailpeter.exe -DestinationPath "release/mailpeter-${{github.ref_name}}_windows-x86_64.zip"

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: ${{ hashFiles('release/') != '' }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
